
uint8_t BHV_LOGO [] PROGMEM=
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 
0x00, 0x00, 0x82, 0xC2, 0xE3, 0xF3, 0x7F, 0x3F, 0x1E, 0x1E, 
0xBE, 0xFC, 0xF8, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xE0, 0xF0, 0xFC, 0xFC, 0xFE, 0xFE, 0x8E, 0x06, 0x02, 0x00, 
0x00, 0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x03, 0x1F, 0x3F, 0x7F, 0xF7, 0xF3, 0xE1, 0xF0, 
0xF8, 0xFC, 0xDE, 0xCF, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0x00, 
0x00, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 
0xC0, 0xE0, 0xF0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFE, 0xFC, 0x7E, 0x7E, 0x3F, 0x1F, 0x0F, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0x80, 0x00, 0x01, 0x81, 0xC1, 0x73, 0x3B, 
0x1F, 0x0F, 0x8F, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0x07, 
0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 
0xF9, 0xF0, 0xF8, 0xDC, 0xCE, 0xC7, 0x83, 0x81, 0x80, 0x00, 
0xCF, 0xFF, 0xFF, 0xFC, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xF8, 0xFC, 0x7E, 0x7E, 
0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0x1F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 
0x03, 0x03, 0x03, 0x00, 0x7F, 0xFF, 0xFF, 0xE1, 0xE0, 0xF3, 
0x7B, 0x3F, 0x1F, 0x0F, 0x87, 0xC7, 0xEF, 0x7E, 0x7E, 0xFC, 
0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 
0x01, 0x00, 0x00, 0x00, 0x40, 0xE0, 0xF0, 0x79, 0x7F, 0x7F, 
0x3F, 0x1F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
0x0F, 0x1F, 0x3F, 0x78, 0x78, 0x7C, 0xEE, 0xC7, 0xC3, 0x41, 
0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00
};

void splashOpenHAK(){
    oled.begin();    // Initialize the OLED
    oled.flipHorizontal(true);
    oled.flipVertical(true);
    oled.clear(ALL); // Clear the display's internal memory
    oled.clear(PAGE); // Clear the buffer.

    oled.setFontType(FONT_8x16);
    oled.setCursor(0, 0);
    oled.print("OpenHAK");
    oled.setCursor(0, 24);
    oled.setFontType(FONT_5x7);
    oled.print("v");
    oled.println(VERSION);
    oled.println("murphy"); // murphifield
    oled.println("percifield");
    oled.display();
    delay(500);
}

void splashDEFCON(){
    oled.begin();    // Initialize the OLED
    oled.flipHorizontal(true);
    oled.flipVertical(true);
    oled.clear(ALL); // Clear the display's internal memory
    oled.clear(PAGE); // Clear the buffer.
    oled.drawBitmap(BHV_LOGO);
    oled.display();
    delay(3000);
     oled.clear(ALL); // Clear the display's internal memory
    oled.clear(PAGE); // Clear the buffer.
    oled.setFontType(FONT_8x16);
    oled.setCursor(0, 0);
    oled.println("OpenHAK");
    oled.setFontType(FONT_5x7);
    oled.setCursor(0, 17);
    oled.println("Biohacking  Village");
    oled.setCursor(0, 37);
    oled.println("DEF CON 27"); 
    oled.display();
}

void printOLED(String inString, boolean printTime) {

    oled.begin();    // Initialize the OLED
    oled.flipHorizontal(true);
    oled.flipVertical(true);
    oled.clear(ALL); // Clear the display's internal memory
    oled.clear(PAGE); // Clear the buffer.


#ifdef DEBUG
    uint8_t bat = getBatteryVoltage();
    oled.setFontType(FONT_5x7);
    oled.setCursor(0, 0);
    oled.println("Battery");
    oled.println(volts);
    oled.println(bat);
    oled.display();
    delay(1000);
    oled.clear(ALL); // Clear the display's internal memory
    oled.clear(PAGE); // Clear the buffer.
#endif


    if(printTime){
      oled.setFontType(SEVEN_SEGMENT);  // (FONT_8x16);
      oled.setCursor(5, 0);
      String timeString = "";
      int hour12 = format12(hour(localTime));
      if (hour12 < 10)  {
        timeString += "0";
      }
      timeString += String(hour12);
      oled.setFontType(FONT_8x16);
      timeString += ":";
      oled.setFontType(SEVEN_SEGMENT);
      if (minute(localTime) < 10) {
        timeString += "0";
      }
      timeString += String(minute(localTime));
      oled.print(timeString);
    }

  oled.setFontType(FONT_5x7);
  oled.setCursor(0, 24);
  oled.println(inString);
  oled.display();
}

int format12(int h){
    if( h == 0 )
    return 12; // 12 midnight
    else if( h  > 12)
    return h - 12 ;
    else
    return h ;
}
